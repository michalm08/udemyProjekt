[{"/Users/michalm/Desktop/udemy/client/src/index.js":"1","/Users/michalm/Desktop/udemy/client/src/App.js":"2","/Users/michalm/Desktop/udemy/client/src/components/layout/Navbar.js":"3","/Users/michalm/Desktop/udemy/client/src/components/layout/Landing.js":"4","/Users/michalm/Desktop/udemy/client/src/components/auth/Register.js":"5","/Users/michalm/Desktop/udemy/client/src/components/auth/Login.js":"6","/Users/michalm/Desktop/udemy/client/src/store.js":"7","/Users/michalm/Desktop/udemy/client/src/actions/types.js":"8","/Users/michalm/Desktop/udemy/client/src/components/layout/Alert.js":"9","/Users/michalm/Desktop/udemy/client/src/reducers/alert.js":"10","/Users/michalm/Desktop/udemy/client/src/actions/alert.js":"11","/Users/michalm/Desktop/udemy/client/src/reducers/index.js":"12","/Users/michalm/Desktop/udemy/client/src/actions/auth.js":"13","/Users/michalm/Desktop/udemy/client/src/reducers/auth.js":"14","/Users/michalm/Desktop/udemy/client/src/utils/setAuthToken.js":"15","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Dashboard.js":"16","/Users/michalm/Desktop/udemy/client/src/components/routing/PrivateRoute.js":"17","/Users/michalm/Desktop/udemy/client/src/reducers/profile.js":"18","/Users/michalm/Desktop/udemy/client/src/actions/profile.js":"19","/Users/michalm/Desktop/udemy/client/src/components/layout/Spinner.js":"20","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/CreateProfile.js":"21","/Users/michalm/Desktop/udemy/client/src/components/dashboard/DashboardActions.js":"22","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/EditProfile.js":"23","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddExperience.js":"24","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddEducation.js":"25","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Experience.js":"26","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Education.js":"27","/Users/michalm/Desktop/udemy/client/src/components/profiles/Profiles.js":"28","/Users/michalm/Desktop/udemy/client/src/components/profiles/ProfileItem.js":"29","/Users/michalm/Desktop/udemy/client/src/components/profile/Profile.js":"30","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileTop.js":"31","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileAbout.js":"32","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileExperience.js":"33","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileEducation.js":"34","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileGithub.js":"35","/Users/michalm/Desktop/udemy/client/src/reducers/post.js":"36","/Users/michalm/Desktop/udemy/client/src/components/posts/Posts.js":"37","/Users/michalm/Desktop/udemy/client/src/actions/post.js":"38","/Users/michalm/Desktop/udemy/client/src/components/posts/PostItem.js":"39","/Users/michalm/Desktop/udemy/client/src/components/posts/PostForm.js":"40","/Users/michalm/Desktop/udemy/client/src/components/post/Post.js":"41"},{"size":197,"mtime":1610403871479,"results":"42","hashOfConfig":"43"},{"size":2730,"mtime":1610573239140,"results":"44","hashOfConfig":"43"},{"size":1516,"mtime":1610558230546,"results":"45","hashOfConfig":"43"},{"size":1090,"mtime":1610467319247,"results":"46","hashOfConfig":"43"},{"size":3076,"mtime":1610458479052,"results":"47","hashOfConfig":"43"},{"size":1887,"mtime":1610458663511,"results":"48","hashOfConfig":"43"},{"size":383,"mtime":1610449424378,"results":"49","hashOfConfig":"43"},{"size":930,"mtime":1610572716273,"results":"50","hashOfConfig":"43"},{"size":485,"mtime":1610447168753,"results":"51","hashOfConfig":"43"},{"size":391,"mtime":1610450053250,"results":"52","hashOfConfig":"43"},{"size":370,"mtime":1610447346264,"results":"53","hashOfConfig":"43"},{"size":222,"mtime":1610557102529,"results":"54","hashOfConfig":"43"},{"size":1980,"mtime":1610468207495,"results":"55","hashOfConfig":"43"},{"size":1083,"mtime":1610536127220,"results":"56","hashOfConfig":"43"},{"size":242,"mtime":1610454010986,"results":"57","hashOfConfig":"43"},{"size":1884,"mtime":1610541293681,"results":"58","hashOfConfig":"43"},{"size":701,"mtime":1610566431762,"results":"59","hashOfConfig":"43"},{"size":1038,"mtime":1610556630689,"results":"60","hashOfConfig":"43"},{"size":5465,"mtime":1610544318188,"results":"61","hashOfConfig":"43"},{"size":254,"mtime":1610467476163,"results":"62","hashOfConfig":"43"},{"size":6770,"mtime":1610527697191,"results":"63","hashOfConfig":"43"},{"size":643,"mtime":1610544115702,"results":"64","hashOfConfig":"43"},{"size":8030,"mtime":1610545970714,"results":"65","hashOfConfig":"43"},{"size":3440,"mtime":1610544164843,"results":"66","hashOfConfig":"43"},{"size":3496,"mtime":1610544151361,"results":"67","hashOfConfig":"43"},{"size":1344,"mtime":1610536325213,"results":"68","hashOfConfig":"43"},{"size":1331,"mtime":1610536467209,"results":"69","hashOfConfig":"43"},{"size":1226,"mtime":1610541269370,"results":"70","hashOfConfig":"43"},{"size":980,"mtime":1610541180333,"results":"71","hashOfConfig":"43"},{"size":2823,"mtime":1610554040648,"results":"72","hashOfConfig":"43"},{"size":1838,"mtime":1610554294788,"results":"73","hashOfConfig":"43"},{"size":796,"mtime":1610554364770,"results":"74","hashOfConfig":"43"},{"size":709,"mtime":1610551909366,"results":"75","hashOfConfig":"43"},{"size":791,"mtime":1610552118941,"results":"76","hashOfConfig":"43"},{"size":1699,"mtime":1610556915872,"results":"77","hashOfConfig":"43"},{"size":1365,"mtime":1610575214908,"results":"78","hashOfConfig":"43"},{"size":994,"mtime":1610576281789,"results":"79","hashOfConfig":"43"},{"size":2522,"mtime":1610576410981,"results":"80","hashOfConfig":"43"},{"size":2387,"mtime":1610576331633,"results":"81","hashOfConfig":"43"},{"size":947,"mtime":1610572025583,"results":"82","hashOfConfig":"43"},{"size":872,"mtime":1610576883453,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"pvz8p4",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michalm/Desktop/udemy/client/src/index.js",[],["171","172"],"/Users/michalm/Desktop/udemy/client/src/App.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Navbar.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Landing.js",[],"/Users/michalm/Desktop/udemy/client/src/components/auth/Register.js",[],"/Users/michalm/Desktop/udemy/client/src/components/auth/Login.js",[],"/Users/michalm/Desktop/udemy/client/src/store.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/types.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Alert.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/alert.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/alert.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/index.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/auth.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/auth.js",[],"/Users/michalm/Desktop/udemy/client/src/utils/setAuthToken.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Dashboard.js",[],"/Users/michalm/Desktop/udemy/client/src/components/routing/PrivateRoute.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/profile.js",[],["173","174"],"/Users/michalm/Desktop/udemy/client/src/actions/profile.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Spinner.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/CreateProfile.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/DashboardActions.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/EditProfile.js",["175"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      twilinkedintter:\n        loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddExperience.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddEducation.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Experience.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Education.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profiles/Profiles.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profiles/ProfileItem.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/Profile.js",["176"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById, getProfiles } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && <ProfileGithub username={profile.githubusername}/>}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileTop.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileAbout.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileExperience.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileEducation.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileGithub.js",["177"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.desctiption}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Start: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","/Users/michalm/Desktop/udemy/client/src/reducers/post.js",[],"/Users/michalm/Desktop/udemy/client/src/components/posts/Posts.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/post.js",[],"/Users/michalm/Desktop/udemy/client/src/components/posts/PostItem.js",[],"/Users/michalm/Desktop/udemy/client/src/components/posts/PostForm.js",[],"/Users/michalm/Desktop/udemy/client/src/components/post/Post.js",["178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":49,"column":6,"nodeType":"187","endLine":49,"endColumn":34,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":11,"column":26,"nodeType":"191","messageId":"192","endLine":11,"endColumn":37},{"ruleId":"185","severity":1,"message":"193","line":10,"column":6,"nodeType":"187","endLine":10,"endColumn":22,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"195","line":12,"column":6,"nodeType":"187","endLine":12,"endColumn":15,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["199"],"no-unused-vars","'getProfiles' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"208","text":"209"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"210","text":"211"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"212","text":"213"},[1648,1676],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[335,351],"[getGithubRepos, username]",[407,416],"[getPost, match.params.id]"]