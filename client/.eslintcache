[{"/Users/michalm/Desktop/udemy/client/src/index.js":"1","/Users/michalm/Desktop/udemy/client/src/App.js":"2","/Users/michalm/Desktop/udemy/client/src/components/layout/Navbar.js":"3","/Users/michalm/Desktop/udemy/client/src/components/layout/Landing.js":"4","/Users/michalm/Desktop/udemy/client/src/components/auth/Register.js":"5","/Users/michalm/Desktop/udemy/client/src/components/auth/Login.js":"6","/Users/michalm/Desktop/udemy/client/src/store.js":"7","/Users/michalm/Desktop/udemy/client/src/actions/types.js":"8","/Users/michalm/Desktop/udemy/client/src/components/layout/Alert.js":"9","/Users/michalm/Desktop/udemy/client/src/reducers/alert.js":"10","/Users/michalm/Desktop/udemy/client/src/actions/alert.js":"11","/Users/michalm/Desktop/udemy/client/src/reducers/index.js":"12","/Users/michalm/Desktop/udemy/client/src/actions/auth.js":"13","/Users/michalm/Desktop/udemy/client/src/reducers/auth.js":"14","/Users/michalm/Desktop/udemy/client/src/utils/setAuthToken.js":"15","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Dashboard.js":"16","/Users/michalm/Desktop/udemy/client/src/components/routing/PrivateRoute.js":"17","/Users/michalm/Desktop/udemy/client/src/reducers/profile.js":"18","/Users/michalm/Desktop/udemy/client/src/actions/profile.js":"19","/Users/michalm/Desktop/udemy/client/src/components/layout/Spinner.js":"20","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/CreateProfile.js":"21","/Users/michalm/Desktop/udemy/client/src/components/dashboard/DashboardActions.js":"22","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/EditProfile.js":"23","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddExperience.js":"24","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddEducation.js":"25"},{"size":197,"mtime":1610403871479,"results":"26","hashOfConfig":"27"},{"size":2009,"mtime":1610531817066,"results":"28","hashOfConfig":"27"},{"size":1371,"mtime":1610467003135,"results":"29","hashOfConfig":"27"},{"size":1090,"mtime":1610467319247,"results":"30","hashOfConfig":"27"},{"size":3076,"mtime":1610458479052,"results":"31","hashOfConfig":"27"},{"size":1887,"mtime":1610458663511,"results":"32","hashOfConfig":"27"},{"size":383,"mtime":1610449424378,"results":"33","hashOfConfig":"27"},{"size":564,"mtime":1610528467595,"results":"34","hashOfConfig":"27"},{"size":485,"mtime":1610447168753,"results":"35","hashOfConfig":"27"},{"size":391,"mtime":1610450053250,"results":"36","hashOfConfig":"27"},{"size":370,"mtime":1610447346264,"results":"37","hashOfConfig":"27"},{"size":189,"mtime":1610463971453,"results":"38","hashOfConfig":"27"},{"size":1980,"mtime":1610468207495,"results":"39","hashOfConfig":"27"},{"size":1038,"mtime":1610460769583,"results":"40","hashOfConfig":"27"},{"size":242,"mtime":1610454010986,"results":"41","hashOfConfig":"27"},{"size":1348,"mtime":1610525398858,"results":"42","hashOfConfig":"27"},{"size":631,"mtime":1610463853627,"results":"43","hashOfConfig":"27"},{"size":761,"mtime":1610529474674,"results":"44","hashOfConfig":"27"},{"size":2874,"mtime":1610529364605,"results":"45","hashOfConfig":"27"},{"size":254,"mtime":1610467476163,"results":"46","hashOfConfig":"27"},{"size":6770,"mtime":1610527697191,"results":"47","hashOfConfig":"27"},{"size":610,"mtime":1610525308759,"results":"48","hashOfConfig":"27"},{"size":8011,"mtime":1610527673630,"results":"49","hashOfConfig":"27"},{"size":3382,"mtime":1610531357077,"results":"50","hashOfConfig":"27"},{"size":3435,"mtime":1610532244441,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"pvz8p4",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michalm/Desktop/udemy/client/src/index.js",[],["105","106"],"/Users/michalm/Desktop/udemy/client/src/App.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Navbar.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Landing.js",[],"/Users/michalm/Desktop/udemy/client/src/components/auth/Register.js",[],"/Users/michalm/Desktop/udemy/client/src/components/auth/Login.js",[],"/Users/michalm/Desktop/udemy/client/src/store.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/types.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Alert.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/alert.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/alert.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/index.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/auth.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/auth.js",[],"/Users/michalm/Desktop/udemy/client/src/utils/setAuthToken.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Dashboard.js",["107"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <h1 className='large test-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <>\n          <DashboardActions />\n        </>\n      ) : (\n        <>\n          <p>You have not yet satup a profile please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create profile\n          </Link>\n        </>\n      )}\n    </>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n","/Users/michalm/Desktop/udemy/client/src/components/routing/PrivateRoute.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/profile.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/profile.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Spinner.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/CreateProfile.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/DashboardActions.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/EditProfile.js",["108"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      twilinkedintter:\n        loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n  }, [loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddExperience.js",["109","110"],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddEducation.js",["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":16,"column":6,"nodeType":"119","endLine":16,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":49,"column":6,"nodeType":"119","endLine":49,"endColumn":15,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":26},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"136","text":"137"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"138","text":"139"},[461,463],"[getCurrentProfile]",[1648,1657],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]