[{"/Users/michalm/Desktop/udemy/client/src/index.js":"1","/Users/michalm/Desktop/udemy/client/src/App.js":"2","/Users/michalm/Desktop/udemy/client/src/components/layout/Navbar.js":"3","/Users/michalm/Desktop/udemy/client/src/components/layout/Landing.js":"4","/Users/michalm/Desktop/udemy/client/src/components/auth/Register.js":"5","/Users/michalm/Desktop/udemy/client/src/components/auth/Login.js":"6","/Users/michalm/Desktop/udemy/client/src/store.js":"7","/Users/michalm/Desktop/udemy/client/src/actions/types.js":"8","/Users/michalm/Desktop/udemy/client/src/components/layout/Alert.js":"9","/Users/michalm/Desktop/udemy/client/src/reducers/alert.js":"10","/Users/michalm/Desktop/udemy/client/src/actions/alert.js":"11","/Users/michalm/Desktop/udemy/client/src/reducers/index.js":"12","/Users/michalm/Desktop/udemy/client/src/actions/auth.js":"13","/Users/michalm/Desktop/udemy/client/src/reducers/auth.js":"14","/Users/michalm/Desktop/udemy/client/src/utils/setAuthToken.js":"15","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Dashboard.js":"16","/Users/michalm/Desktop/udemy/client/src/components/routing/PrivateRoute.js":"17","/Users/michalm/Desktop/udemy/client/src/reducers/profile.js":"18","/Users/michalm/Desktop/udemy/client/src/actions/profile.js":"19","/Users/michalm/Desktop/udemy/client/src/components/layout/Spinner.js":"20","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/CreateProfile.js":"21","/Users/michalm/Desktop/udemy/client/src/components/dashboard/DashboardActions.js":"22","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/EditProfile.js":"23","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddExperience.js":"24","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddEducation.js":"25","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Experience.js":"26","/Users/michalm/Desktop/udemy/client/src/components/dashboard/Education.js":"27","/Users/michalm/Desktop/udemy/client/src/components/profiles/Profiles.js":"28","/Users/michalm/Desktop/udemy/client/src/components/profiles/ProfileItem.js":"29","/Users/michalm/Desktop/udemy/client/src/components/profile/Profile.js":"30","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileTop.js":"31","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileAbout.js":"32","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileExperience.js":"33","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileEducation.js":"34","/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileGithub.js":"35","/Users/michalm/Desktop/udemy/client/src/reducers/post.js":"36"},{"size":197,"mtime":1610403871479,"results":"37","hashOfConfig":"38"},{"size":2254,"mtime":1610548116733,"results":"39","hashOfConfig":"38"},{"size":1454,"mtime":1610539487124,"results":"40","hashOfConfig":"38"},{"size":1090,"mtime":1610467319247,"results":"41","hashOfConfig":"38"},{"size":3076,"mtime":1610458479052,"results":"42","hashOfConfig":"38"},{"size":1887,"mtime":1610458663511,"results":"43","hashOfConfig":"38"},{"size":383,"mtime":1610449424378,"results":"44","hashOfConfig":"38"},{"size":772,"mtime":1610557219857,"results":"45","hashOfConfig":"38"},{"size":485,"mtime":1610447168753,"results":"46","hashOfConfig":"38"},{"size":391,"mtime":1610450053250,"results":"47","hashOfConfig":"38"},{"size":370,"mtime":1610447346264,"results":"48","hashOfConfig":"38"},{"size":222,"mtime":1610557102529,"results":"49","hashOfConfig":"38"},{"size":1980,"mtime":1610468207495,"results":"50","hashOfConfig":"38"},{"size":1083,"mtime":1610536127220,"results":"51","hashOfConfig":"38"},{"size":242,"mtime":1610454010986,"results":"52","hashOfConfig":"38"},{"size":1884,"mtime":1610541293681,"results":"53","hashOfConfig":"38"},{"size":631,"mtime":1610463853627,"results":"54","hashOfConfig":"38"},{"size":1038,"mtime":1610556630689,"results":"55","hashOfConfig":"38"},{"size":5465,"mtime":1610544318188,"results":"56","hashOfConfig":"38"},{"size":254,"mtime":1610467476163,"results":"57","hashOfConfig":"38"},{"size":6770,"mtime":1610527697191,"results":"58","hashOfConfig":"38"},{"size":643,"mtime":1610544115702,"results":"59","hashOfConfig":"38"},{"size":8030,"mtime":1610545970714,"results":"60","hashOfConfig":"38"},{"size":3440,"mtime":1610544164843,"results":"61","hashOfConfig":"38"},{"size":3496,"mtime":1610544151361,"results":"62","hashOfConfig":"38"},{"size":1344,"mtime":1610536325213,"results":"63","hashOfConfig":"38"},{"size":1331,"mtime":1610536467209,"results":"64","hashOfConfig":"38"},{"size":1226,"mtime":1610541269370,"results":"65","hashOfConfig":"38"},{"size":980,"mtime":1610541180333,"results":"66","hashOfConfig":"38"},{"size":2823,"mtime":1610554040648,"results":"67","hashOfConfig":"38"},{"size":1838,"mtime":1610554294788,"results":"68","hashOfConfig":"38"},{"size":796,"mtime":1610554364770,"results":"69","hashOfConfig":"38"},{"size":709,"mtime":1610551909366,"results":"70","hashOfConfig":"38"},{"size":791,"mtime":1610552118941,"results":"71","hashOfConfig":"38"},{"size":1699,"mtime":1610556915872,"results":"72","hashOfConfig":"38"},{"size":529,"mtime":1610557473778,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"pvz8p4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michalm/Desktop/udemy/client/src/index.js",[],["148","149"],"/Users/michalm/Desktop/udemy/client/src/App.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Navbar.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Landing.js",[],"/Users/michalm/Desktop/udemy/client/src/components/auth/Register.js",[],"/Users/michalm/Desktop/udemy/client/src/components/auth/Login.js",[],"/Users/michalm/Desktop/udemy/client/src/store.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/types.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Alert.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/alert.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/alert.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/index.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/auth.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/auth.js",[],"/Users/michalm/Desktop/udemy/client/src/utils/setAuthToken.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Dashboard.js",[],"/Users/michalm/Desktop/udemy/client/src/components/routing/PrivateRoute.js",[],"/Users/michalm/Desktop/udemy/client/src/reducers/profile.js",[],"/Users/michalm/Desktop/udemy/client/src/actions/profile.js",[],"/Users/michalm/Desktop/udemy/client/src/components/layout/Spinner.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/CreateProfile.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/DashboardActions.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/EditProfile.js",["150"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      twilinkedintter:\n        loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddExperience.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile-forms/AddEducation.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Experience.js",[],"/Users/michalm/Desktop/udemy/client/src/components/dashboard/Education.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profiles/Profiles.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profiles/ProfileItem.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/Profile.js",["151"],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileTop.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileAbout.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileExperience.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileEducation.js",[],"/Users/michalm/Desktop/udemy/client/src/components/profile/ProfileGithub.js",["152"],"/Users/michalm/Desktop/udemy/client/src/reducers/post.js",["153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":49,"column":6,"nodeType":"160","endLine":49,"endColumn":34,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":11,"column":26,"nodeType":"164","messageId":"165","endLine":11,"endColumn":37},{"ruleId":"158","severity":1,"message":"166","line":10,"column":6,"nodeType":"160","endLine":10,"endColumn":22,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":5,"column":3,"nodeType":"170","messageId":"171","endLine":5,"endColumn":7},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["174"],"no-unused-vars","'getProfiles' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["175"],"no-dupe-keys","Duplicate key 'post'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"180","text":"181"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"182","text":"183"},[1648,1676],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[335,351],"[getGithubRepos, username]"]